metadata:
  name: "Ensure the S3 bucket has server-side-encryption enabled"
  id: "CKV2_AWS_123"
  category: "GENERAL_SECURITY"
definition:
  or:
    - and:
      ########################################## CIFRADO CON AES 256 EXCLUSIVO PARA CLOUDFRONTS - S3 LOGGING ########################################
      - cond_type: "attribute"
        resource_types:
        - "AWS::S3::Bucket"
        attribute: "BucketEncryption.ServerSideEncryptionConfiguration.*.ServerSideEncryptionByDefault.SSEAlgorithm"
        operator: "equals"
        value: "AES256"
      - or:
        - and:
          - cond_type: "filter"
            attribute: "resource_type"
            value:
              - AWS::S3::Bucket
            operator: within
          - cond_type: "connection"
            resource_types:
              - AWS::S3::Bucket
            connected_resource_types:
              - AWS::CloudFront::Distribution
            operator: exists
        - and:
          - cond_type: "filter"
            attribute: "resource_type"
            value:
              - AWS::S3::Bucket
            operator: within
          - cond_type: "connection"
            resource_types:
              - AWS::S3::Bucket
            connected_resource_types:
              - AWS::S3::BucketPolicy
            operator: exists
          - or:
            - cond_type: "attribute"
              resource_types:
                - "AWS::S3::BucketPolicy"
              attribute: "PolicyDocument.Statement.*.Principal.AWS.Fn::Join.*.*"
              operator: "regex_match"
              value: .*arn:aws:iam::cloudfront:user\/CloudFront Origin Access Identity*.
            - cond_type: "attribute"
              resource_types:
                - "AWS::S3::BucketPolicy"
              attribute: "PolicyDocument.Statement.Principal.AWS"
              operator: "regex_match"
              value: .*arn:aws:iam::cloudfront:user\/CloudFront Origin Access Identity*.
            - cond_type: "attribute"
              resource_types:
                - "AWS::S3::BucketPolicy"
              attribute: "PolicyDocument.Statement.*.Principal.AWS"
              operator: "regex_match"
              value: .*arn:aws:iam::cloudfront:user\/CloudFront Origin Access Identity*.
            - cond_type: "attribute"
              resource_types:
                - "AWS::S3::BucketPolicy"
              attribute: "PolicyDocument.Statement.Principal.AWS.Fn::Join.*.*"
              operator: "regex_match"
              value: .*arn:aws:iam::cloudfront:user\/CloudFront Origin Access Identity*.
        - and:
            - cond_type: "attribute"
              resource_types:
                - "AWS::S3::Bucket"
              attribute: "AccessControl"
              operator: "equals"
              value: "LogDeliveryWrite"
    - and:
      ########################################## CIFRADO POR MEDIO DE KMS PARA EL RESTO DE BUCKETS ########################################
      - cond_type: "attribute"
        resource_types:
          - "AWS::S3::Bucket"
        attribute: "BucketEncryption.ServerSideEncryptionConfiguration.*.ServerSideEncryptionByDefault.SSEAlgorithm"
        operator: "equals"
        value: "aws:kms"
      - cond_type: "attribute"
        resource_types:
          - "AWS::S3::Bucket"
        attribute: "BucketEncryption.ServerSideEncryptionConfiguration.*.ServerSideEncryptionByDefault.KMSMasterKeyID"
        operator: "exists"
      - cond_type: "attribute"
        resource_types:
          - "AWS::S3::Bucket"
        attribute: "BucketEncryption.ServerSideEncryptionConfiguration.*.ServerSideEncryptionByDefault.KMSMasterKeyID"
        operator: "is_not_empty"