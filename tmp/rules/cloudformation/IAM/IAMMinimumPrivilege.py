from checkov.cloudformation.checks.resource.base_resource_check import BaseResourceCheck
from checkov.common.models.enums import CheckResult, CheckCategories
from checkov.common.util.type_forcers import force_list
import ast
import re


class IAMMinimumPrivilege(BaseResourceCheck):
    def __init__(self):
        name = "Ensure no IAM policies documents allow \"*\" as a statement's actions and Resources"
        id = "CKV_AWS_335"
        supported_resources = [
            'AWS::IAM::Policy', 'AWS::IAM::Group', 'AWS::IAM::Role', 'AWS::IAM::User','AWS::IAM::ManagedPolicy']
        categories = [CheckCategories.IAM]
        super().__init__(name=name, id=id, categories=categories,
                         supported_resources=supported_resources)

    def scan_resource_conf(self, conf):
        myproperties = conf.get("Properties")
        type = conf['Type']

        # catch for inline policies
        if type != 'AWS::IAM::Policy':
            if isinstance(myproperties, dict) and 'Policies' in myproperties.keys():
                policies = myproperties['Policies']
                if len(policies) > 0:
                    for policy in policies:
                        if not isinstance(policy, dict):
                            return CheckResult.UNKNOWN
                        if policy.get('PolicyDocument'):
                            result = check_policy(policy['PolicyDocument'])
                            if result == CheckResult.FAILED:
                                return result
                    return CheckResult.PASSED
                # not empty and had non failing policies
                return CheckResult.UNKNOWN
        # this is just for Policy resources
        if isinstance(myproperties, dict) and 'PolicyDocument' in myproperties.keys():
            return check_policy(myproperties['PolicyDocument'])
        return CheckResult.UNKNOWN


check = IAMMinimumPrivilege()


def check_policy(policy_block):
    if policy_block:
        if isinstance(policy_block, str):
            policy_block = ast.literal_eval(policy_block)
        if isinstance(policy_block, dict) and 'Statement' in policy_block.keys():
            for statement in force_list(policy_block['Statement']):
                if statement.get('Effect', ['Allow']) == 'Allow':
                    if check_action(statement) or check_resource(statement):
                        return CheckResult.FAILED
                return CheckResult.PASSED
        else:
            return CheckResult.PASSED
    else:
        return CheckResult.PASSED


def check_action(statement):
    return 'Action' in statement and '*' in str(force_list(statement['Action']))


def check_resource(statement):
    if 'Resource' in statement:
        if 'Action' in statement and any(x for x in ["elasticloadbalancing:DescribeAccountLimits", "elasticloadbalancing:DescribeListenerCertificates",
                                                     "elasticloadbalancing:DescribeLoadBalancerAttributes", "elasticloadbalancing:DescribeLoadBalancers",
                                                     "elasticloadbalancing:DescribeLoadBalancers", "elasticloadbalancing:DescribeRules",
                                                     "elasticloadbalancing:DescribeSSLPolicies", "elasticloadbalancing:DescribeTags",
                                                     "elasticloadbalancing:DescribeTargetGroupAttributes", "elasticloadbalancing:DescribeTargetGroups",
                                                     "elasticloadbalancing:DescribeTargetHealth", "elasticloadbalancing:DescribeInstanceHealth",
                                                     "elasticloadbalancing:DescribeLoadBalancerAttributes", "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
                                                     "elasticloadbalancing:DescribeLoadBalancerPolicies", "elasticloadbalancing:DescribeTags",
                                                     "autoscaling:DescribeAccountLimits", "autoscaling:DescribeAdjustmentTypes",
                                                     "autoscaling:DescribeAutoScalingGroups", "autoscaling:DescribeAutoScalingInstances",
                                                     "autoscaling:DescribeAutoScalingNotificationTypes", "autoscaling:DescribeInstanceRefreshes",
                                                     "autoscaling:DescribeLaunchConfigurations", "autoscaling:DescribeLifecycleHooks",
                                                     "autoscaling:DescribeLifecycleHookTypes", "autoscaling:DescribeLoadBalancers",
                                                     "autoscaling:DescribeLoadBalancerTargetGroups", "autoscaling:DescribeMetricCollectionTypes",
                                                     "autoscaling:DescribeNotificationConfigurations", "autoscaling:DescribePolicies",
                                                     "autoscaling:DescribeScalingActivities", "autoscaling:DescribeScalingProcessTypes",
                                                     "autoscaling:DescribeScheduledActions", "autoscaling:DescribeTags",
                                                     "autoscaling:DescribeTerminationPolicyTypes", "autoscaling:DescribeWarmPool",
                                                     "ssm:CreateActivation", "ssm:CreateActivation", "ssm:CreateMaintenanceWindow", "ssm:CreateOpsItem",
                                                     "ssm:CreateOpsMetadata", "ssm:CreatePatchBaseline", "ssm:DeleteActivation", "ssm:DeleteInventory",
                                                     "ssm:DescribeActivations", "ssm:DescribeAutomationExecutions", "ssm:DescribeAvailablePatches",
                                                     "ssm:DescribeInstanceInformation", "ssm:DescribeInstancePatchStates", "ssm:DescribeInstancePatchStatesForPatchGroup",
                                                     "ssm:DescribeInstancePatches", "ssm:DescribeInstanceProperties", "ssm:DescribeInventoryDeletions",
                                                     "ssm:DescribeMaintenanceWindowExecutionTaskInvocations", "ssm:DescribeMaintenanceWindowSchedule",
                                                     "ssm:DescribeMaintenanceWindows", "ssm:DescribeMaintenanceWindowsForTarget", "ssm:DescribeOpsItems",
                                                     "ssm:DescribeParameters", "ssm:DescribePatchBaselines", "ssm:DescribePatchGroupState",
                                                     "ssm:DescribePatchGroups", "ssm:DescribePatchProperties", "ssm:DescribeSessions",
                                                     "ssm:GetCommandInvocation", "ssm:GetDeployablePatchSnapshotForInstance", "ssm:GetInventory",
                                                     "ssm:GetInventorySchema", "ssm:GetMaintenanceWindowExecution", "ssm:GetMaintenanceWindowExecutionTask",
                                                     "ssm:GetMaintenanceWindowExecutionTaskInvocation", "ssm:GetManifest", "ssm:ListAssociations",
                                                     "ssm:ListCommandInvocations", "ssm:ListCommands", "ssm:ListComplianceItems", "ssm:ListComplianceSummaries",
                                                     "ssm:ListDocuments", "ssm:ListInventoryEntries", "ssm:ListOpsItemEvents", "ssm:ListOpsItemRelatedItems",
                                                     "ssm:ListOpsMetadata", "ssm:ListResourceComplianceSummaries", "ssm:ListResourceDataSync", "ssm:PutConfigurePackageResult",
                                                     "ssm:PutInventory", "ssm:RegisterManagedInstance",
                                                     "rekognition:CompareFaces", "rekognition:CreateCollection", "rekognition:DetectFaces",
                                                     "rekognition:DetectLabels", "rekognition:DetectModerationLabels", "rekognition:DetectProtectiveEquipment",
                                                     "rekognition:DetectText", "rekognition:GetCelebrityInfo", "rekognition:GetCelebrityRecognition",
                                                     "rekognition:GetContentModeration", "rekognition:GetFaceDetection", "rekognition:GetFaceSearch",
                                                     "rekognition:GetLabelDetection", "rekognition:GetPersonTracking", "rekognition:GetSegmentDetection",
                                                     "rekognition:GetTextDetection", "rekognition:RecognizeCelebrities", "rekognition:StartCelebrityRecognition",
                                                     "rekognition:StartContentModeration", "rekognition:StartFaceDetection", "rekognition:StartLabelDetection",
                                                     "rekognition:StartPersonTracking", "rekognition:StartSegmentDetection", "rekognition:StartTextDetection",
                                                     "sns:CheckIfPhoneNumberIsOptedOut", "sns:CreatePlatformApplication", "sns:CreatePlatformEndpoint",
                                                     "sns:CreateSMSSandboxPhoneNumber", "sns:DeleteEndpoint", "sns:DeletePlatformApplication",
                                                     "sns:DeleteSMSSandboxPhoneNumber", "sns:GetEndpointAttributes", "sns:GetPlatformApplicationAttributes",
                                                     "sns:GetSMSAttributes", "sns:GetSMSSandboxAccountStatus", "sns:GetSubscriptionAttributes",
                                                     "sns:ListEndpointsByPlatformApplication", "sns:ListOriginationNumbers", "sns:ListPhoneNumbersOptedOut",
                                                     "sns:ListPlatformApplications", "sns:ListSMSSandboxPhoneNumbers", "sns:ListSubscriptions",
                                                     "sns:ListTopics", "sns:OptInPhoneNumber", "sns:SetEndpointAttributes", "sns:SetPlatformApplicationAttributes",
                                                     "sns:SetSMSAttributes", "sns:SetSubscriptionAttributes", "sns:VerifySMSSandboxPhoneNumber",
                                                     "dynamodb:DescribeLimits", "dynamodb:DescribeReservedCapacity", "dynamodb:DescribeReservedCapacityOfferings",
                                                     "dynamodb:ListBackups", "dynamodb:ListContributorInsights", "dynamodb:ListExports",
                                                     "dynamodb:ListGlobalTables", "dynamodb:ListImports", "dynamodb:ListStreams", "dynamodb:ListTables",
                                                     "elasticache:ModifyMountTargetSecurityGroups", "elasticache:PutAccountPreferences",
                                                     "eks:CreateCluster", "eks:DescribeAddonVersions", "eks:ListClusters", "eks:RegisterCluster",
                                                     "glue:BatchGetCustomEntityTypes", "glue:CheckSchemaVersionValidity", "glue:CreateBlueprint", "glue:CreateClassifier",
                                                     "glue:CreateCrawler", "glue:CreateCustomEntityType", "glue:CreateDevEndpoint", "glue:CreateJob",
                                                     "glue:CreateMLTransform", "glue:CreateScript", "glue:CreateSecurityConfiguration", "glue:CreateSession",
                                                     "glue:CreateTrigger", "glue:CreateWorkflow", "glue:DeleteClassifier", "glue:DeleteCustomEntityType",
                                                     "glue:DeleteSecurityConfiguration", "glue:GetClassifier", "glue:GetClassifiers", "glue:GetCrawlerMetrics", "glue:GetCrawlers",
                                                     "glue:GetCustomEntityType", "glue:GetDataflowGraph", "glue:GetDevEndpoints", "glue:GetJobs",
                                                     "glue:GetMapping", "glue:GetPlan", "glue:GetSecurityConfiguration", "glue:GetSecurityConfigurations",
                                                     "glue:GetTriggers", "glue:ListBlueprints", "glue:ListCrawlers", "glue:ListCrawls",
                                                     "glue:ListCustomEntityTypes", "glue:ListDevEndpoints", "glue:ListJobs", "glue:ListRegistries",
                                                     "glue:ListSessions", "glue:ListTriggers", "glue:ListWorkflows", "glue:ResetJobBookmark",
                                                     "glue:StartCrawlerSchedule", "glue:StopCrawlerSchedule", "glue:UpdateClassifier", "glue:UpdateCrawlerSchedule",
                                                     "glue:UseGlueStudio", "fsx:DescribeBackups", "fsx:DescribeDataRepositoryAssociations", "fsx:DescribeDataRepositoryTasks",
                                                     "fsx:DescribeFileCaches", "fsx:DescribeFileSystems", "fsx:DescribeSnapshots", "fsx:DescribeStorageVirtualMachines",
                                                     "fsx:DescribeVolumes", "lambda:CreateCodeSigningConfig", "lambda:CreateEventSourceMapping", "lambda:GetAccountSettings", "lambda:ListCodeSigningConfigs",
                                                     "lambda:ListEventSourceMappings", "lambda:ListFunctions", "lambda:ListLayerVersions", "lambda:ListLayers",
                                                     "shield:AssociateDRTLogBucket", "shield:AssociateDRTRole", "shield:AssociateProactiveEngagementDetails", "shield:CreateSubscription",
                                                     "shield:DescribeAttackStatistics", "shield:DescribeDRTAccess", "shield:DescribeEmergencyContactSettings", "shield:DisableApplicationLayerAutomaticResponse",
                                                     "shield:DisableProactiveEngagement", "shield:DisassociateDRTLogBucket", "shield:DisassociateDRTRole", "shield:EnableApplicationLayerAutomaticResponse",
                                                     "shield:EnableProactiveEngagement", "shield:GetSubscriptionState", "shield:ListAttacks", "shield:ListProtectionGroups",
                                                     "shield:ListProtections", "shield:UpdateApplicationLayerAutomaticResponse", "shield:UpdateEmergencyContactSettings",
                                                     "cloudwatch:DescribeAlarmsForMetric", "cloudwatch:DescribeAnomalyDetectors", "cloudwatch:DescribeInsightRules", "cloudwatch:GetMetricData",
                                                     "cloudwatch:GetMetricStatistics", "cloudwatch:GetMetricWidgetImage", "cloudwatch:ListDashboards", "cloudwatch:ListManagedInsightRules",
                                                     "cloudwatch:ListMetricStreams", "cloudwatch:ListMetrics", "cloudwatch:PutAnomalyDetector", "cloudwatch:PutManagedInsightRules",
                                                     "cloudwatch:cloudwatch:PutMetricData", "logs:PutLogEvents", "logs:DescribeLogGroups",
                                                     "wafv2:GetChangeToken", "wafv2:GetChangeTokenStatus", "wafv2:ListActivatedRulesInRuleGroup", "wafv2:ListByteMatchSets",
                                                     "wafv2:ListGeoMatchSets", "wafv2:ListIPSets", "wafv2:ListLoggingConfigurations", "wafv2:ListRateBasedRules",
                                                     "wafv2:ListRegexMatchSets", "wafv2:ListRegexPatternSets", "wafv2:ListRuleGroups", "wafv2:ListRules",
                                                     "wafv2:ListSizeConstraintSets", "wafv2:ListSqlInjectionMatchSets", "wafv2:ListSubscribedRuleGroups", "wafv2:ListWebACLs",
                                                     "wafv2:ListXssMatchSets", "elasticache:DescribeEngineDefaultParameters", "elasticache:DescribeEvents",
                                                     "elasticache:DescribeReservedCacheNodesOfferings", "elasticache:DescribeServiceUpdates",
                                                     "athena:ListEngineVersions", "macie2:AcceptInvitation", "macie2:CreateInvitations", "macie2:CreateSampleFindings",
                                                     "macie2:DeclineInvitations", "macie2:DeleteInvitations", "macie2:DescribeBuckets", "macie2:DescribeOrganizationConfiguration",
                                                     "macie2:DisableMacie", "macie2:DisableOrganizationAdminAccount", "macie2:DisassociateFromAdministratorAccount", "macie2:DisassociateFromMasterAccount",
                                                     "macie2:EnableMacie", "macie2:EnableOrganizationAdminAccount", "macie2:GetAdministratorAccount",
                                                     "macie2:GetBucketStatistics", "macie2:GetClassificationExportConfiguration", "macie2:GetFindingStatistics",
                                                     "macie2:GetFindings", "macie2:GetFindingsPublicationConfiguration", "macie2:GetInvitationsCount",
                                                     "macie2:GetMacieSession", "macie2:GetMasterAccount", "macie2:GetRevealConfiguration",
                                                     "macie2:GetSensitiveDataOccurrences", "macie2:GetSensitiveDataOccurrencesAvailability", "macie2:GetUsageStatistics",
                                                     "macie2:GetUsageTotals", "macie2:ListAllowLists", "macie2:ListClassificationJobs",
                                                     "macie2:ListCustomDataIdentifiers", "macie2:ListFindings", "macie2:ListFindingsFilters", "macie2:ListInvitations",
                                                     "macie2:ListManagedDataIdentifiers", "macie2:ListMembers", "macie2:ListOrganizationAdminAccounts",
                                                     "macie2:PutClassificationExportConfiguration", "macie2:PutFindingsPublicationConfiguration", "macie2:SearchResources",
                                                     "macie2:TestCustomDataIdentifier", "macie2:UpdateMacieSession", "macie2:UpdateMemberSession",
                                                     "macie2:UpdateOrganizationConfiguration", "macie2:UpdateRevealConfiguration",
                                                     "ec2:AcceptReservedInstancesExchangeQuote", "ec2:AdvertiseByoipCidr", "ec2:AssociateTrunkInterface",
                                                     "ec2:BundleInstance", "ec2:CancelBundleTask", "ec2:CancelConversionTask",
                                                     "ec2:CancelReservedInstancesListing", "ec2:ConfirmProductInstance", "ec2:CreateCoipPoolPermission",
                                                     "ec2:CreateDefaultSubnet", "ec2:CreateDefaultVpc", "ec2:CreateReservedInstancesListing",
                                                     "ec2:CreateSpotDatafeedSubscription", "ec2:CreateSubnetCidrReservation", "ec2:DeleteCoipPoolPermission",
                                                     "ec2:DeleteQueuedReservedInstances", "ec2:DeleteSpotDatafeedSubscription", "ec2:DeleteSubnetCidrReservation",
                                                     "ec2:DeprovisionByoipCidr", "ec2:DeregisterInstanceEventNotificationAttributes", "ec2:DescribeAccountAttributes",
                                                     "ec2:DescribeAddresses", "ec2:DescribeAggregateIdFormat", "ec2:DescribeAvailabilityZones",
                                                     "ec2:DescribeBundleTasks", "ec2:DescribeByoipCidrs", "ec2:DescribeCapacityReservationFleets",
                                                     "ec2:DescribeCapacityReservations", "ec2:DescribeCarrierGateways", "ec2:DescribeClassicLinkInstances",
                                                     "ec2:DescribeFastSnapshotRestores", "ec2:DescribeFleets", "ec2:DescribeFlowLogs",
                                                     "ec2:DescribeFpgaImages", "ec2:DescribeHostReservationOfferings", "ec2:DescribeHostReservations",
                                                     "ec2:DescribeHosts", "ec2:DescribeIamInstanceProfileAssociations", "ec2:DescribeIdFormat",
                                                     "ec2:DescribeIdentityIdFormat", "ec2:DescribeImages", "ec2:DescribeImportImageTasks",
                                                     "ec2:DescribeImportSnapshotTasks", "ec2:DescribeInstanceCreditSpecifications", "ec2:DescribeInstanceEventNotificationAttributes",
                                                     "ec2:DescribeInstanceEventWindows", "ec2:DescribeInstanceStatus", "ec2:DescribeInstanceTypeOfferings",
                                                     "ec2:DescribeInstanceTypes", "ec2:DescribeInstances", "ec2:DescribeInternetGateways",
                                                     "ec2:DescribeIpamPools", "ec2:DescribeIpamScopes", "ec2:DescribeIpams", "ec2:DescribeIpv6Pools", "ec2:DescribeKeyPairs",
                                                     "ec2:DescribeLaunchTemplateVersions", "ec2:DescribeLaunchTemplates", "ec2:DescribeLocalGatewayRouteTablePermissions",
                                                     "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations", "ec2:DescribeLocalGatewayRouteTableVpcAssociations", "ec2:DescribeLocalGatewayRouteTables",
                                                     "ec2:DescribeLocalGatewayVirtualInterfaceGroups", "ec2:DescribeLocalGatewayVirtualInterfaces", "ec2:DescribeLocalGateways",
                                                     "ec2:DescribeManagedPrefixLists", "ec2:DescribeMovingAddresses", "ec2:DescribeNatGateways", "ec2:DescribeNetworkAcls",
                                                     "ec2:DescribeNetworkInsightsAccessScopeAnalyses", "ec2:DescribeNetworkInsightsAccessScopes", "ec2:DescribeNetworkInsightsAnalyses",
                                                     "ec2:DescribeNetworkInsightsPaths", "ec2:DescribeNetworkInterfaceAttribute", "ec2:DescribeNetworkInterfacePermissions",
                                                     "ec2:DescribeNetworkInterfaces", "ec2:DescribePlacementGroups", "ec2:DescribePrefixLists",
                                                     "ec2:DescribePrincipalIdFormat", "ec2:DescribePublicIpv4Pools", "ec2:DescribeRegions",
                                                     "ec2:DescribeReplaceRootVolumeTasks", "ec2:DescribeReservedInstances", "ec2:DescribeReservedInstancesListings", "ec2:DescribeReservedInstancesModifications",
                                                     "ec2:DescribeReservedInstancesOfferings", "ec2:DescribeRouteTables", "ec2:DescribeScheduledInstanceAvailability",
                                                     "ec2:DescribeScheduledInstances", "ec2:DescribeSecurityGroupReferences", "ec2:DescribeSecurityGroupRules",
                                                     "ec2:DescribeSecurityGroups", "ec2:DescribeSnapshotTierStatus", "ec2:DescribeSnapshots",
                                                     "ec2:DescribeSpotDatafeedSubscription", "ec2:DescribeSpotFleetRequests", "ec2:DescribeSpotInstanceRequests", "ec2:DescribeSpotPriceHistory",
                                                     "ec2:DescribeStaleSecurityGroups", "ec2:DescribeSubnets", "ec2:DescribeTags",
                                                     "ec2:DescribeTrafficMirrorFilters", "ec2:DescribeTrafficMirrorSessions", "ec2:DescribeTrafficMirrorTargets",
                                                     "ec2:DescribeTransitGatewayAttachments", "ec2:DescribeTransitGatewayConnectPeers", "ec2:DescribeTransitGatewayConnects",
                                                     "ec2:DescribeTransitGatewayMulticastDomains", "ec2:DescribeTransitGatewayPeeringAttachments", "ec2:DescribeTransitGatewayPolicyTables",
                                                     "ec2:DescribeTransitGatewayRouteTableAnnouncements", "ec2:DescribeTransitGatewayRouteTables", "ec2:DescribeTransitGatewayVpcAttachments",
                                                     "ec2:DescribeTransitGateways", "ec2:DescribeTrunkInterfaceAssociations", "ec2:DescribeVolumeStatus",
                                                     "ec2:DescribeVolumes", "ec2:DescribeVolumesModifications", "ec2:DescribeVpcClassicLink",
                                                     "ec2:DescribeVpcClassicLinkDnsSupport", "ec2:DescribeVpcEndpointConnectionNotifications", "ec2:DescribeVpcEndpointConnections",
                                                     "ec2:DescribeVpcEndpointServiceConfigurations", "ec2:DescribeVpcEndpointServicePermissions", "ec2:DescribeVpcEndpointServices",
                                                     "ec2:DescribeVpcEndpoints", "ec2:DescribeVpcPeeringConnections", "ec2:DescribeVpcs",
                                                     "ec2:DescribeVpnConnections", "ec2:DescribeVpnGateways", "ec2:DisableEbsEncryptionByDefault",
                                                     "ec2:DisableIpamOrganizationAdminAccount", "ec2:DisableSerialConsoleAccess", "ec2:DisassociateTrunkInterface",
                                                     "ec2:EnableEbsEncryptionByDefault", "ec2:EnableIpamOrganizationAdminAccount", "ec2:EnableSerialConsoleAccess",
                                                     "ec2:ExportTransitGatewayRoutes", "ec2:GetAssociatedIpv6PoolCidrs", "ec2:GetDefaultCreditSpecification",
                                                     "ec2:GetEbsDefaultKmsKeyId", "ec2:GetEbsEncryptionByDefault", "ec2:GetHostReservationPurchasePreview",
                                                     "ec2:GetInstanceTypesFromInstanceRequirements", "ec2:GetNetworkInsightsAccessScopeAnalysisFindings", "ec2:GetNetworkInsightsAccessScopeContent",
                                                     "ec2:GetReservedInstancesExchangeQuote", "ec2:GetSerialConsoleAccessStatus", "ec2:GetSpotPlacementScores",
                                                     "ec2:GetSubnetCidrReservations", "ec2:GetTransitGatewayAttachmentPropagations", "ec2:GetTransitGatewayMulticastDomainAssociations",
                                                     "ec2:GetTransitGatewayPrefixListReferences", "ec2:GetTransitGatewayRouteTableAssociations", "ec2:GetTransitGatewayRouteTablePropagations",
                                                     "ec2:GetVpnConnectionDeviceTypes", "ec2:ModifyAvailabilityZoneGroup", "ec2:ModifyDefaultCreditSpecification",
                                                     "ec2:ModifyEbsDefaultKmsKeyId", "ec2:ModifyIdFormat", "ec2:ModifyIdentityIdFormat",
                                                     "ec2:MoveAddressToVpc", "ec2:ProvisionByoipCidr", "ec2:PurchaseReservedInstancesOffering",
                                                     "ec2:PurchaseScheduledInstances", "ec2:RegisterInstanceEventNotificationAttributes", "ec2:ReportInstanceStatus",
                                                     "ec2:ResetEbsDefaultKmsKeyId", "ec2:RestoreAddressToClassic", "ec2:SearchTransitGatewayMulticastGroups",
                                                     "ec2:WithdrawByoipCidr", "ec2:DescribeVolumes", "ec2:DeleteTags",
                                                     "cloudfron:CreateFieldLevelEncryptionConfig", "cloudfron:CreateFieldLevelEncryptionProfile", "cloudfron:CreateKeyGroup",
                                                     "cloudfron:CreateMonitoringSubscription", "cloudfron:CreateOriginAccessControl", "cloudfron:CreatePublicKey",
                                                     "cloudfron:CreateSavingsPlan", "cloudfron:DeleteKeyGroup", "cloudfron:DeleteMonitoringSubscription",
                                                     "cloudfron:DeletePublicKey", "cloudfron:GetKeyGroup", "cloudfron:GetKeyGroupConfig",
                                                     "cloudfron:GetMonitoringSubscription", "cloudfron:GetPublicKey", "cloudfron:GetPublicKeyConfig",
                                                     "cloudfron:GetSavingsPlan", "cloudfron:ListCachePolicies", "cloudfron:ListCloudFrontOriginAccessIdentities",
                                                     "cloudfron:ListDistributions", "cloudfron:ListDistributionsByCachePolicyId", "cloudfron:ListDistributionsByKeyGroup",
                                                     "cloudfron:ListDistributionsByLambdaFunction", "cloudfron:ListDistributionsByOriginRequestPolicyId", "cloudfron:ListDistributionsByRealtimeLogConfig",
                                                     "cloudfron:ListDistributionsByResponseHeadersPolicyId", "cloudfron:ListDistributionsByWebACLId", "cloudfron:ListFieldLevelEncryptionConfigs",
                                                     "cloudfron:ListFieldLevelEncryptionProfiles", "cloudfron:ListFunctions", "cloudfron:ListKeyGroups",
                                                     "cloudfron:ListOriginAccessControls", "cloudfron:ListOriginRequestPolicies", "cloudfron:ListPublicKeys",
                                                     "cloudfron:ListRateCards", "cloudfron:ListRealtimeLogConfigs", "cloudfron:ListResponseHeadersPolicies",
                                                     "cloudfron:ListSavingsPlans", "cloudfron:ListStreamingDistributions", "cloudfron:ListUsages", "cloudfron:UpdateFieldLevelEncryptionConfig",
                                                     "cloudfron:UpdateKeyGroup", "cloudfron:UpdatePublicKey", "cloudfron:UpdateSavingsPlan",
                                                     "s3:CreateJob", "s3:GetAccessPoint", "s3:GetAccountPublicAccessBlock",
                                                     "s3:ListAccessPoints", "s3:ListAccessPointsForObjectLambda", "s3:ListAllMyBuckets",
                                                     "s3:ListJobs", "s3:ListMultiRegionAccessPoints", "s3:ListStorageLensConfigurations",
                                                     "s3:PutAccessPointPublicAccessBlock", "s3:PutAccountPublicAccessBlock", "s3:PutStorageLensConfiguration",
                                                     "acm:RequestCertificate", "ses:CloneReceiptRuleSet", "ses:CreateConfigurationSet",
                                                     "ses:CreateConfigurationSetEventDestination", "ses:CreateConfigurationSetTrackingOptions", "ses:CreateCustomVerificationEmailTemplate",
                                                     "ses:CreateReceiptFilter", "ses:CreateReceiptRule", "ses:CreateReceiptRuleSet",
                                                     "ses:CreateTemplate", "ses:DeleteConfigurationSet", "ses:DeleteConfigurationSetEventDestination",
                                                     "ses:DeleteConfigurationSetTrackingOptions", "ses:DeleteCustomVerificationEmailTemplate", "ses:DeleteIdentity",
                                                     "ses:DeleteIdentityPolicy", "ses:DeleteReceiptFilter", "ses:DeleteReceiptRule",
                                                     "ses:DeleteReceiptRuleSet", "ses:DeleteTemplate", "ses:DeleteVerifiedEmailAddress",
                                                     "ses:DescribeActiveReceiptRuleSet", "ses:DescribeConfigurationSet", "ses:DescribeReceiptRule",
                                                     "ses:DescribeReceiptRuleSet", "ses:GetAccountSendingEnabled", "ses:GetCustomVerificationEmailTemplate",
                                                     "ses:GetIdentityDkimAttributes", "ses:GetIdentityMailFromDomainAttributes", "ses:GetIdentityNotificationAttributes",
                                                     "ses:GetIdentityPolicies", "ses:GetIdentityVerificationAttributes", "ses:GetSendQuota",
                                                     "ses:GetSendStatistics", "ses:GetTemplate", "ses:ListConfigurationSets",
                                                     "ses:ListCustomVerificationEmailTemplates", "ses:ListIdentities", "ses:ListIdentityPolicies",
                                                     "ses:ListReceiptFilters", "ses:ListReceiptRuleSets", "ses:ListTemplates",
                                                     "ses:ListVerifiedEmailAddresses", "ses:PutConfigurationSetDeliveryOptions", "ses:PutIdentityPolicy",
                                                     "ses:ReorderReceiptRuleSet", "ses:SetActiveReceiptRuleSet", "ses:SetIdentityDkimEnabled",
                                                     "ses:SetIdentityFeedbackForwardingEnabled", "ses:SetIdentityHeadersInNotificationsEnabled", "ses:SetIdentityMailFromDomain",
                                                     "ses:SetIdentityNotificationTopic", "ses:SetReceiptRulePosition", "ses:TestRenderTemplate",
                                                     "ses:UpdateAccountSendingEnabled", "ses:UpdateConfigurationSetEventDestination", "ses:UpdateConfigurationSetReputationMetricsEnabled",
                                                     "ses:UpdateConfigurationSetSendingEnabled", "ses:UpdateConfigurationSetTrackingOptions", "ses:UpdateCustomVerificationEmailTemplate",
                                                     "ses:UpdateReceiptRule", "ses:UpdateTemplate", "ses:VerifyDomainDkim",
                                                     "ses:VerifyDomainIdentity", "ses:VerifyEmailAddress", "ses:VerifyEmailIdentity",
                                                     "rds:CancelExportTask", "rds:CreateDBProxy", "rds:CrossRegionCommunication",
                                                     "rds:DeleteDBInstanceAutomatedBackup", "rds:DescribeAccountAttributes", "rds:DescribeCertificates",
                                                     "rds:DescribeDBEngineVersions", "rds:DescribeEngineDefaultClusterParameters", "rds:DescribeEngineDefaultParameters",
                                                     "rds:DescribeEventCategories", "rds:DescribeEvents", "rds:DescribeExportTasks",
                                                     "rds:DescribeOrderableDBInstanceOptions", "rds:DescribeRecommendationGroups", "rds:DescribeReservedDBInstancesOfferings",
                                                     "rds:DescribeSourceRegions", "rds:ModifyRecommendation", "rds:StartExportTask", "rds:ModifyCertificates",
                                                     "elasticmapreduce:CreateRepository", "elasticmapreduce:CreateSecurityConfiguration", "elasticmapreduce:CreateStudio",
                                                     "elasticmapreduce:DeleteRepository", "elasticmapreduce:DeleteSecurityConfiguration", "elasticmapreduce:DescribeReleaseLabel",
                                                     "elasticmapreduce:DescribeRepository", "elasticmapreduce:DescribeSecurityConfiguration", "elasticmapreduce:GetBlockPublicAccessConfiguration",
                                                     "elasticmapreduce:LinkRepository", "elasticmapreduce:ListClusters", "elasticmapreduce:ListEditors",
                                                     "elasticmapreduce:ListNotebookExecutions", "elasticmapreduce:ListReleaseLabels", "elasticmapreduce:ListRepositories",
                                                     "elasticmapreduce:ListSecurityConfigurations", "elasticmapreduce:ListStudioSessionMappings", "elasticmapreduce:ListStudios",
                                                     "elasticmapreduce:PutBlockPublicAccessConfiguration", "elasticmapreduce:RunJobFlow", "elasticmapreduce:UnlinkRepository",
                                                     "elasticmapreduce:UpdateRepository", "elasticmapreduce:ViewEventsFromAllClustersInConsole", "dms:CreateEndpoint",
                                                     "dms:CreateEventSubscription", "dms:CreateReplicationInstance", "dms:CreateReplicationSubnetGroup",
                                                     "dms:DescribeAccountAttributes", "dms:DescribeCertificates", "dms:DescribeConnections",
                                                     "dms:DescribeEndpointSettings", "dms:DescribeEndpointTypes", "dms:DescribeEndpoints",
                                                     "dms:DescribeEventCategories", "dms:DescribeEventSubscriptions", "dms:DescribeEvents",
                                                     "dms:DescribeOrderableReplicationInstances", "dms:DescribePendingMaintenanceActions", "dms:DescribeReplicationInstances",
                                                     "dms:DescribeReplicationSubnetGroups", "dms:DescribeReplicationTasks", "dms:ImportCertificate",
                                                     "dms:ModifyEventSubscription", "dms:ModifyReplicationSubnetGroup", "mq:CreateBroker",
                                                     "mq:CreateConfiguration", "mq:DescribeBrokerEngineTypes", "mq:DescribeBrokerInstanceOptions",
                                                     "mq:ListBrokers", "mq:ListConfigurations", "elasticloadbalancing:DescribeAccountLimits",
                                                     "elasticloadbalancing:DescribeListenerCertificates", "elasticloadbalancing:DescribeListeners",
                                                     "elasticloadbalancing:DescribeLoadBalancerAttributes", "elasticloadbalancing:DescribeLoadBalancers",
                                                     "elasticloadbalancing:DescribeRules", "elasticloadbalancing:DescribeSSLPolicies",
                                                     "elasticloadbalancing:DescribeTags", "elasticloadbalancing:DescribeTargetGroupAttributes",
                                                     "elasticloadbalancing:DescribeTargetGroups",
                                                     "elasticloadbalancing:DescribeTargetHealth", "elasticloadbalancing:SetWebAcl",
                                                     "backup:CopyIntoBackupVault", "backup:DescribeBackupJob", "backup:DescribeCopyJob",
                                                     "backup:DescribeGlobalSettings", "backup:DescribeProtectedResource", "backup:DescribeRegionSettings",
                                                     "backup:DescribeReportJob", "backup:DescribeRestoreJob", "backup:ExportBackupPlanTemplate", "backup:GetBackupPlanFromJSON",
                                                     "backup:GetBackupPlanFromTemplate", "backup:GetSupportedResourceTypes", "backup:ListBackupJobs",
                                                     "backup:ListBackupPlanTemplates", "backup:ListBackupPlans", "backup:ListBackupVaults",
                                                     "backup:ListCopyJobs", "backup:ListFrameworks", "backup:ListProtectedResources",
                                                     "backup:ListRecoveryPointsByResource", "backup:ListReportJobs", "backup:ListReportPlans",
                                                     "backup:ListRestoreJobs", "backup:StopBackupJob", "backup:UpdateGlobalSettings",
                                                     "backup:UpdateRegionSettings", "cloudshell:CreateEnvironment", "polly:DescribeVoices",
                                                     "polly:GetSpeechSynthesisTask", "polly:ListLexicons", "polly:ListSpeechSynthesisTasks",
                                                     "kms:CancelKeyDeletion", "kms:ConnectCustomKeyStore", "kms:CreateAlias",
                                                     "kms:CreateCustomKeyStore", "kms:CreateGrant", "kms:CreateKey",
                                                     "kms:Decrypt", "kms:DeleteAlias", "kms:DeleteCustomKeyStore",
                                                     "kms:DeleteImportedKeyMaterial", "kms:DescribeCustomKeyStores", "kms:DescribeKey",
                                                     "kms:DisableKey", "kms:DisableKeyRotation", "kms:DisconnectCustomKeyStore",
                                                     "kms:EnableKey", "kms:EnableKeyRotation", "kms:Encrypt",
                                                     "kms:GenerateDataKey", "kms:GenerateDataKeyPair", "kms:GenerateDataKeyPairWithoutPlaintext",
                                                     "kms:GenerateDataKeyWithoutPlaintext", "kms:GenerateMac", "kms:GenerateRandom", "kms:GetKeyPolicy",
                                                     "kms:GetKeyRotationStatus", "kms:GetParametersForImport",
                                                     "kms:GetPublicKey", "kms:ImportKeyMaterial", "kms:ListAliases",
                                                     "kms:ListGrants", "kms:ListKeyPolicies", "kms:ListKeys",
                                                     "kms:ListResourceTags", "kms:ListRetirableGrants", "kms:PutKeyPolicy",
                                                     "kms:ReEncryptFrom", "kms:ReEncryptTo", "kms:ReplicateKey",
                                                     "kms:RetireGrant", "kms:RevokeGrant", "kms:ScheduleKeyDeletion",
                                                     "kms:Sign", "kms:SynchronizeMultiRegionKey", "kms:TagResource", "kms:UntagResource",
                                                     "kms:UpdateAlias", "kms:UpdateCustomKeyStore", "kms:UpdateKeyDescription", "kms:UpdatePrimaryRegion",
                                                     "kms:Verify", "kms:VerifyMac",
                                                     "comprehend:BatchDetectDominantLanguage", "comprehend:BatchDetectEntities", "comprehend:BatchDetectKeyPhrases", "comprehend:BatchDetectSentiment",
                                                     "comprehend:BatchDetectSyntax", "comprehend:BatchDetectTargetedSentiment", "comprehend:ContainsPiiEntities",
                                                     "comprehend:DetectDominantLanguage", "comprehend:DetectKeyPhrases", "comprehend:DetectPiiEntities",
                                                     "comprehend:DetectSentiment", "comprehend:DetectSyntax", "comprehend:DetectTargetedSentiment",
                                                     "comprehend:ListDocumentClassificationJobs", "comprehend:ListDocumentClassifierSummaries", "comprehend:ListDocumentClassifiers",
                                                     "comprehend:ListDominantLanguageDetectionJobs", "comprehend:ListEndpoints", "comprehend:ListEntitiesDetectionJobs",
                                                     "comprehend:ListEntityRecognizerSummaries", "comprehend:ListEntityRecognizers", "comprehend:ListEventsDetectionJobs",
                                                     "comprehend:ListKeyPhrasesDetectionJobs", "comprehend:ListPiiEntitiesDetectionJobs", "comprehend:ListSentimentDetectionJobs",
                                                     "comprehend:ListTargetedSentimentDetectionJobs", "comprehend:ListTopicsDetectionJobs",
                                                     "mgn:BatchDeleteSnapshotRequestForMgn", "mgn:CreateLaunchConfigurationTemplate", "mgn:CreateReplicationConfigurationTemplate",
                                                     "mgn:CreateVcenterClientForMgn", "mgn:DescribeJobs", "mgn:DescribeLaunchConfigurationTemplates",
                                                     "mgn:DescribeReplicationConfigurationTemplates", "mgn:DescribeReplicationServerAssociationsForMgn", "mgn:DescribeSnapshotRequestsForMgn",
                                                     "mgn:DescribeSourceServers", "mgn:DescribeVcenterClients", "mgn:GetAgentInstallationAssetsForMgn",
                                                     "mgn:GetChannelCommandsForMgn", "mgn:InitializeService", "mgn:ListTagsForResource",
                                                     "mgn:RegisterAgentForMgn", "mgn:SendChannelCommandResultForMgn", "mgn:SendClientLogsForMgn",
                                                     "mgn:SendClientMetricsForMgn", "mgn:VerifyClientRoleForMgn",
                                                     "datasync:CreateAgent", "datasync:CreateLocationEfs", "datasync:CreateLocationFsxLustre",
                                                     "datasync:CreateLocationFsxOntap", "datasync:CreateLocationFsxOpenZfs", "datasync:CreateLocationFsxWindows",
                                                     "datasync:CreateLocationHdfs", "datasync:CreateLocationNfs", "datasync:CreateLocationObjectStorage",
                                                     "datasync:CreateLocationS3", "datasync:CreateLocationSmb", "datasync:CreateTask",
                                                     "datasync:ListAgents", "datasync:ListLocations", "datasync:ListTaskExecutions",
                                                     "datasync:ListTasks", "storagegateway:ActivateGateway", "storagegateway:CreateTapePool",
                                                     "storagegateway:DeleteTapeArchive", "storagegateway:DescribeTapeArchives", "storagegateway:ListGateways",
                                                     "cloudhsm:AddTagsToResource", "cloudhsm:CreateHapg", "cloudhsm:CreateLunaClient",
                                                     "cloudhsm:DeleteHapg", "cloudhsm:DeleteHsm", "cloudhsm:DeleteLunaClient",
                                                     "cloudhsm:DescribeBackups", "cloudhsm:DescribeClusters", "cloudhsm:DescribeHapg",
                                                     "cloudhsm:DescribeHsm", "cloudhsm:DescribeLunaClient", "cloudhsm:GetConfig",
                                                     "cloudhsm:ListAvailableZones", "cloudhsm:ListHapgs", "cloudhsm:ListHsms",
                                                     "cloudhsm:ListLunaClients", "cloudhsm:ListTagsForResource", "cloudhsm:ModifyHapg",
                                                     "cloudhsm:ModifyHsm", "cloudhsm:ModifyLunaClient", "cloudhsm:RemoveTagsFromResource",
                                                     "qldb:ListJournalS3Exports", "qldb:ListLedgers", "config:BatchGetResourceConfig", "config:DeleteConfigurationRecorder",
                                                     "config:DeleteConformancePack", "config:DeleteDeliveryChannel", "config:DeleteOrganizationConfigRule",
                                                     "config:DeleteOrganizationConformancePack", "config:DeletePendingAggregationRequest", "config:DeleteRemediationExceptions",
                                                     "config:DeleteResourceConfig", "config:DeleteRetentionConfiguration", "config:DeliverConfigSnapshot",
                                                     "config:DescribeAggregationAuthorizations", "config:DescribeComplianceByResource", "config:DescribeConfigurationAggregators",
                                                     "config:DescribeConfigurationRecorderStatus", "config:DescribeConfigurationRecorders", "config:DescribeConformancePackCompliance",
                                                     "config:DescribeConformancePackStatus", "config:DescribeConformancePacks", "config:DescribeDeliveryChannelStatus",
                                                     "config:DescribeDeliveryChannels", "config:DescribeOrganizationConfigRuleStatuses", "config:DescribeOrganizationConfigRules",
                                                     "config:DescribeOrganizationConformancePackStatuses", "config:DescribeOrganizationConformancePacks", "config:DescribePendingAggregationRequests",
                                                     "config:DescribeRemediationExceptions", "config:DescribeRetentionConfigurations", "config:GetComplianceDetailsByResource",
                                                     "config:GetComplianceSummaryByConfigRule", "config:GetComplianceSummaryByResourceType", "config:GetConformancePackComplianceDetails",
                                                     "config:GetConformancePackComplianceSummary", "config:GetDiscoveredResourceCounts", "config:GetOrganizationConfigRuleDetailedStatus",
                                                     "config:GetOrganizationConformancePackDetailedStatus", "config:GetResourceConfigHistory", "config:ListDiscoveredResources",
                                                     "config:PutConfigurationRecorder", "config:PutConformancePack", "config:PutDeliveryChannel",
                                                     "config:PutEvaluations", "config:PutExternalEvaluation", "config:PutOrganizationConfigRule",
                                                     "config:PutOrganizationConformancePack", "config:PutRemediationExceptions", "config:PutResourceConfig",
                                                     "config:PutRetentionConfiguration", "config:SelectAggregateResourceConfig", "config:SelectResourceConfig",
                                                     "config:StartConfigurationRecorder", "config:StopConfigurationRecorder",
                                                     "cognito-sync:DeleteIdentities", "cognito-sync:DescribeIdentity", "cognito-sync:GetCredentialsForIdentity",
                                                     "cognito-sync:GetId", "cognito-sync:GetOpenIdToken", "cognito-sync:ListIdentityPools",
                                                     "cognito-sync:SetIdentityPoolRoles", "cognito-sync:SetPrincipalTagAttributeMap", "cognito-sync:UnlinkIdentity",
                                                     "route53:CreateCidrCollection", "route53:CreateHealthCheck", "route53:CreateHostedZone",
                                                     "route53:CreateReusableDelegationSet", "route53:CreateTrafficPolicy", "route53:GetAccountLimit",
                                                     "route53:GetCheckerIpRanges", "route53:GetGeoLocation", "route53:GetHealthCheckCount",
                                                     "route53:GetHostedZoneCount", "route53:GetTrafficPolicyInstanceCount", "route53:ListCidrCollections",
                                                     "route53:ListGeoLocations", "route53:ListHealthChecks", "route53:ListHostedZones",
                                                     "route53:ListHostedZonesByName", "route53:ListHostedZonesByVPC", "route53:ListReusableDelegationSets",
                                                     "route53:ListTrafficPolicies", "route53:ListTrafficPolicyInstances", "route53:TestDNSAnswer",
                                                     "batch:DescribeComputeEnvironments", "batch:DescribeJobDefinitions", "batch:DescribeJobQueues",
                                                     "batch:DescribeJobs", "batch:DescribeSchedulingPolicies", "batch:ListJobs",
                                                     "batch:ListSchedulingPolicies", "autoscaling:CreateScalingPlan", "autoscaling:DeleteScalingPlan",
                                                     "autoscaling:DescribeScalingPlanResources", "autoscaling:DescribeScalingPlans", "autoscaling:GetScalingPlanResourceForecastData",
                                                     "autoscaling:UpdateScalingPlan", "application-autoscaling:DeleteScalingPolicy", "application-autoscaling:DeleteScheduledAction",
                                                     "application-autoscaling:DeregisterScalableTarget", "application-autoscaling:DescribeScalableTargets", "application-autoscaling:DescribeScalingActivities",
                                                     "application-autoscaling:DescribeScalingPolicies", "application-autoscaling:DescribeScheduledActions", "application-autoscaling:PutScalingPolicy",
                                                     "application-autoscaling:PutScheduledAction", "application-autoscaling:RegisterScalableTarget",
                                                     "events:ListApiDestinations", "events:ListArchives", "events:ListConnections",
                                                     "events:ListEndpoints", "events:ListEventBuses", "events:ListEventSources",
                                                     "events:ListPartnerEventSources", "events:ListReplays", "events:ListRuleNamesByTarget",
                                                     "events:ListRules", "events:PutPartnerEvents", "events:PutPermission",
                                                     "events:RemovePermission", "events:TestEventPattern",
                                                     "kinesis:DescribeLimits", "kinesis:DisableEnhancedMonitoring", "kinesis:EnableEnhancedMonitoring",
                                                     "kinesis:ListShards", "kinesis:ListStreams", "kinesis:UpdateShardCount",
                                                     "kinesis:UpdateStreamMode", "kinesisanalytics:CreateApplication", "kinesisanalytics:DiscoverInputSchema",
                                                     "kinesisanalytics:ListApplications", "firehose:ListDeliveryStreams",
                                                     "es:AcceptInboundConnection", "es:AcceptInboundCrossClusterSearchConnection",
                                                     "sagemaker:CreateLineageGroupPolicy", "sagemaker:DeleteLineageGroupPolicy", "sagemaker:DescribeLineageGroup",
                                                     "sagemaker:DisableSagemakerServicecatalogPortfolio", "sagemaker:EnableSagemakerServicecatalogPortfolio", "sagemaker:GetLineageGroupPolicy",
                                                     "sagemaker:GetSagemakerServicecatalogPortfolioStatus", "sagemaker:GetSearchSuggestions", "sagemaker:ListActions",
                                                     "sagemaker:ListAlgorithms", "sagemaker:ListAppImageConfigs", "sagemaker:ListApps",
                                                     "sagemaker:ListArtifacts", "sagemaker:ListAssociations", "sagemaker:ListAutoMLJobs",
                                                     "sagemaker:ListCandidatesForAutoMLJob", "sagemaker:ListCodeRepositories", "sagemaker:ListCompilationJobs",
                                                     "sagemaker:ListContexts", "sagemaker:ListDataQualityJobDefinitions", "sagemaker:ListDeviceFleets",
                                                     "sagemaker:ListDevices", "sagemaker:ListDomains", "sagemaker:ListEdgeDeploymentPlans",
                                                     "sagemaker:ListEdgePackagingJobs", "sagemaker:ListEndpointConfigs", "sagemaker:ListEndpoints",
                                                     "sagemaker:ListExperiments", "sagemaker:ListFeatureGroups", "sagemaker:ListFlowDefinitions",
                                                     "sagemaker:ListHumanLoops", "sagemaker:ListHumanTaskUis", "sagemaker:ListHyperParameterTuningJobs",
                                                     "sagemaker:ListImages", "sagemaker:ListInferenceRecommendationsJobSteps", "sagemaker:ListInferenceRecommendationsJobs",
                                                     "sagemaker:ListLabelingJobs", "sagemaker:ListLineageGroups", "sagemaker:ListModelBiasJobDefinitions",
                                                     "sagemaker:ListModelExplainabilityJobDefinitions", "sagemaker:ListModelMetadata", "sagemaker:ListModelPackageGroups",
                                                     "sagemaker:ListModelQualityJobDefinitions", "sagemaker:ListModels", "sagemaker:ListMonitoringExecutions",
                                                     "sagemaker:ListMonitoringSchedules", "sagemaker:ListNotebookInstanceLifecycleConfigs", "sagemaker:ListNotebookInstances",
                                                     "sagemaker:ListPipelines", "sagemaker:ListProcessingJobs", "sagemaker:ListProjects",
                                                     "sagemaker:ListStageDevices", "sagemaker:ListStudioLifecycleConfigs", "sagemaker:ListSubscribedWorkteams",
                                                     "sagemaker:ListTrainingJobs", "sagemaker:ListTransformJobs", "sagemaker:ListTrialComponents",
                                                     "sagemaker:ListTrials", "sagemaker:ListUserProfiles", "sagemaker:ListWorkforces",
                                                     "sagemaker:ListWorkteams", "sagemaker:PutLineageGroupPolicy", "sagemaker:QueryLineage",
                                                     "sagemaker:RenderUiTemplate", "sagemaker:Search", "textract:AnalyzeDocument", "textract:AnalyzeExpense",
                                                     "textract:AnalyzeID", "textract:DetectDocumentText", "textract:GetDocumentAnalysis",
                                                     "textract:GetDocumentTextDetection", "textract:GetExpenseAnalysis", "textract:StartDocumentAnalysis",
                                                     "textract:StartDocumentTextDetection", "textract:StartExpenseAnalysis",
                                                     "transcribe:CreateCallAnalyticsCategory", "transcribe:CreateLanguageModel", "transcribe:CreateMedicalVocabulary",
                                                     "transcribe:CreateVocabulary", "transcribe:CreateVocabularyFilter", "transcribe:DeleteCallAnalyticsCategory",
                                                     "transcribe:DeleteCallAnalyticsJob", "transcribe:GetCallAnalyticsCategory", "transcribe:GetCallAnalyticsJob",
                                                     "transcribe:ListCallAnalyticsCategories", "transcribe:ListCallAnalyticsJobs", "transcribe:ListLanguageModels",
                                                     "transcribe:ListMedicalTranscriptionJobs", "transcribe:ListMedicalVocabularies", "transcribe:ListTagsForResource",
                                                     "transcribe:ListTranscriptionJobs", "transcribe:ListVocabularies", "transcribe:ListVocabularyFilters",
                                                     "transcribe:StartCallAnalyticsJob", "transcribe:StartMedicalStreamTranscription", "transcribe:StartMedicalStreamTranscriptionWebSocket",
                                                     "transcribe:StartMedicalTranscriptionJob", "transcribe:StartStreamTranscription", "transcribe:StartStreamTranscriptionWebSocket",
                                                     "transcribe:StartTranscriptionJob", "transcribe:TagResource", "transcribe:UntagResource",
                                                     "transcribe:UpdateCallAnalyticsCategory", "states:ListActivities", "states:ListStateMachines",
                                                     "states:SendTaskFailure", "states:SendTaskHeartbeat", "states:SendTaskSuccess",
                                                     "datapipeline:ActivatePipeline", "datapipeline:AddTags", "datapipeline:CreatePipeline",
                                                     "datapipeline:DeactivatePipeline", "datapipeline:DeletePipeline", "datapipeline:DescribeObjects",
                                                     "datapipeline:DescribePipelines", "datapipeline:EvaluateExpression", "datapipeline:GetAccountLimits",
                                                     "datapipeline:GetPipelineDefinition", "datapipeline:ListPipelines", "datapipeline:PollForTask",
                                                     "datapipeline:PutAccountLimits", "datapipeline:PutPipelineDefinition", "datapipeline:QueryObjects",
                                                     "datapipeline:RemoveTags", "datapipeline:ReportTaskProgress", "datapipeline:ReportTaskRunnerHeartbeat",
                                                     "datapipeline:SetStatus", "datapipeline:SetTaskStatus", "datapipeline:ValidatePipelineDefinition",
                                                     "quicksight:AccountConfigurations", "quicksight:CreateAccountCustomization", "quicksight:CreateAccountSubscription",
                                                     "quicksight:CreateCustomPermissions", "quicksight:CreateDataSource", "quicksight:CreateVPCConnection",
                                                     "quicksight:DeleteCustomPermissions", "quicksight:DeleteVPCConnection", "quicksight:DescribeAccountSettings",
                                                     "quicksight:DescribeCustomPermissions", "quicksight:DescribeIpRestriction", "quicksight:GetAnonymousUserEmbedUrl",
                                                     "quicksight:GetGroupMapping", "quicksight:GetSessionEmbedUrl", "quicksight:ListCustomPermissions",
                                                     "quicksight:ListDataSets", "quicksight:ListDataSources", "quicksight:ListIngestions",
                                                     "quicksight:ListNamespaces", "quicksight:ScopeDownPolicy", "quicksight:SearchDirectoryGroups",
                                                     "quicksight:SetGroupMapping", "quicksight:Subscribe", "quicksight:Unsubscribe",
                                                     "quicksight:UpdateAccountSettings", "quicksight:UpdateCustomPermissions", "quicksight:UpdateIpRestriction",
                                                     "quicksight:UpdatePublicSharingSettings", "quicksight:UpdateResourcePermissions"] if x in force_list(statement['Action'])):
            return False    
        con = 0
        for x in force_list(statement['Resource']):
            string_val, n = re.subn('({|\'|\\[|\\s|\\]|}|,|-|/|\\$)', '', str(x))
            string_val_final, n = re.subn('__startline__:.[0-9]*__endline__:.[0-9]*', '', str(string_val))
            if bool(re.search("((Fn::Join|Fn::Sub|arn).[a-zA-Z0-9._:]*.(\\*$)|^[a-zA-Z0-9_:]*$)", string_val_final)):
                con = con+1
        if con == len(force_list(statement['Resource'])):
            return False
        if '*' in str(force_list(statement['Resource'])):
            return True
    return False
